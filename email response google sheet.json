{
  "name": "email response google sheet",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -1120,
        40
      ],
      "id": "aa9dca9b-1e02-46d8-8083-b02ddfe5b9ff",
      "name": "Gmail Trigger",
      "notesInFlow": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "tADgpQsJ8bMHi1FT",
          "name": "Gmail account 4"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body }}",
        "options": {
          "systemMessage": "=You are an intelligent AI support assistant for Golden Craft Jewellers, a premium jewelry brand. Your role is to read incoming customer emails and respond with accurate, warm, and professional replies based on the content.\n\nYou have access to the following tools:\n\n1. **Pinecone Vector Store**: Contains verified product and service information about Golden Craft Jewellers, including custom jewelry options, pricing, delivery process, certifications, and more.\n\n2. **Append row in sheet in Google Sheets**: Save every interaction by recording the following fields in the \"Email Responses\" sheet:\n   - CLIENT EMAIL:{{ $json.from }}\n   - CLIENT MESSAGE:{{ $json.body }}\n   - CLIENT EMAIL: **Ai response which will be generated by you**\n   - STATUS: NOT APPROVED\n3. **OpenAI Chat Model**: Use this to interpret the email and generate a thoughtful response.\n\n### Responsibilities:\n\n- Read and understand the incoming customer email.\n- Determine if the inquiry is relevant to Golden Craft Jewellers (e.g., products, pricing, custom orders, bridal sets, name rings, certificates, delivery, etc.).\n\n### If the email **is related** to our jewelry business:\n- Search Pinecone to gather any product or service details needed to support the reply.\n- Draft a reply using only what is known from the customer message and Pinecone context.\n- Format the reply with:\n  - `subject:` (e.g., \"Inquiry About Custom Name Ring\")\n  - `body:` (full professional message)\n  - Then add:\n    ```\n    Best regards,\n    Ali Khan\n    ```\n  - The closing **must be on a new line after the message body**, with \"Ali Khan\" on its own line under \"Best regards,\".\n- Save the client email, client message, and the AI response to Google Sheets using the tool.\n\n### If the email **is not related** to jewelry or Golden Craft:\n- Respond politely stating that this support system is only for jewelry-related inquiries.\n- Do not invent any product or information beyond what is found in Pinecone or the email content.\n\nKeep your tone professional, respectful, and clear at all times. Do not make assumptions or provide information not grounded in Pinecone context or the email message.\n\n\nfill the google sheet properly\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -480,
        40
      ],
      "id": "c4acec75-feb8-46c6-acfa-679a093a188b",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -680,
        360
      ],
      "id": "6088e356-610c-4ab5-8f8d-66a14389e17b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "you have to store my Jewlery store data ",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8ndocs",
          "mode": "list",
          "cachedResultName": "n8ndocs"
        },
        "options": {
          "pineconeNamespace": "QnA"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -260,
        360
      ],
      "id": "50c8f2aa-2660-4789-ba9c-3e6ba5f98738",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "STvGzUEGqtBrxb6G",
          "name": "PineconeApi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -260,
        520
      ],
      "id": "7f46c34f-9205-48f2-9719-123ef5af00c0",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1X51dUMDYGE-QNV6yU7Ow57nBpuLvvkPA",
          "mode": "list",
          "cachedResultName": "rag app",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1X51dUMDYGE-QNV6yU7Ow57nBpuLvvkPA"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1020,
        -400
      ],
      "id": "a37fbb05-048c-42b7-be1b-c9e46a28d92b",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "miOzT9gZF4nKLw6k",
          "name": "ali's google drive"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {}
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -840,
        -400
      ],
      "id": "60dddc27-c2a2-4f78-ba25-882bbddca67e",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "miOzT9gZF4nKLw6k",
          "name": "ali's google drive"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -360,
        -240
      ],
      "id": "654aa8ba-77a5-4963-b19b-ddf585087d00",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "n8ndocs",
          "mode": "list",
          "cachedResultName": "n8ndocs"
        },
        "options": {
          "pineconeNamespace": "QnA"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -620,
        -400
      ],
      "id": "07791899-a3e8-4e8a-9887-c47e179cfb2d",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "STvGzUEGqtBrxb6G",
          "name": "PineconeApi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -780,
        -160
      ],
      "id": "a8a07295-a4ef-4b37-908c-40a97dd6fe64",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const emailData = $json;\n\n// Get the sender's email address\nconst from = emailData.from?.value?.[0]?.address || '';\n\n// Get the plain text body of the email\nconst body = emailData.text || '';\n\n// Return the extracted values\nreturn [\n  {\n    json: {\n      from,\n      body\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -780,
        40
      ],
      "id": "021f6417-f3e7-42b0-aad8-3c8dad5785ea",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const to = item.json[\"CLIENT EMAIL\"];\n  const aiResponse = item.json[\"AI RESPONSE \"]?.trim();\n\n  if (!to || !aiResponse) {\n    throw new Error(\"Missing required fields (CLIENT EMAIL or AI RESPONSE)\");\n  }\n\n  // Extract subject and body from AI RESPONSE\n  const subjectMatch = aiResponse.match(/Subject:\\s*(.+)/i);\n  const bodyMatch = aiResponse.match(/Body:\\s*([\\s\\S]*)/i);\n\n  const subject = subjectMatch ? subjectMatch[1].trim() : \"Re: Your Inquiry\";\n  let body = bodyMatch ? bodyMatch[1].trim() : aiResponse;\n\n  // Ensure proper line breaks for the closing\n  body = body.replace(/Best regards[\\s,]*\\n?Ali Khan/gi, \"\").trim(); // remove any existing closing\n  body += \"\\n\\nBest regards,\\nAli Khan\";\n\n  return {\n    json: {\n      to,\n      subject,\n      body\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        680
      ],
      "id": "971da67b-1800-42dc-adf5-2569575fd7df",
      "name": "Code1"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -80,
        680
      ],
      "id": "167ac7be-a42c-4698-afa6-73cb277b3b6a",
      "name": "Send a message",
      "webhookId": "ca87bbe7-18b0-45d1-b70d-5c4960993ed5",
      "credentials": {
        "gmailOAuth2": {
          "id": "tADgpQsJ8bMHi1FT",
          "name": "Gmail account 4"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8",
          "mode": "list",
          "cachedResultName": "EMAIL RESPONSE",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "STATUS",
              "lookupValue": "approved"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -800,
        680
      ],
      "id": "8a86e2de-310c-41cd-ad47-149f6c21afc3",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "K4T3pQbIwEAiZUmi",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8",
          "mode": "list",
          "cachedResultName": "EMAIL RESPONSE",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "STATUS": "sent",
            "row_number": "={{ $('Get row(s) in sheet').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "CLIENT EMAIL",
              "displayName": "CLIENT EMAIL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "CLIENT MESSAGE",
              "displayName": "CLIENT MESSAGE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "AI RESPONSE ",
              "displayName": "AI RESPONSE ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        140,
        680
      ],
      "id": "df0627c6-f34b-4d92-92fd-93f87ba9bbb5",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "K4T3pQbIwEAiZUmi",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1060,
        700
      ],
      "id": "5628656f-f25c-4117-b42b-3d999bc71ce7",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8",
          "mode": "list",
          "cachedResultName": "EMAIL RESPONSE",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/14Ujb7uEdDkOPp9X3AwGZTW7xSCvJK7NTeBoqS45smP8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "CLIENT EMAIL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('CLIENT_EMAIL', ``, 'string') }}",
            "CLIENT MESSAGE": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('CLIENT_MESSAGE', ``, 'string') }}",
            "AI RESPONSE ": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('AI_RESPONSE_', ``, 'string') }}",
            "STATUS": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('STATUS', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "CLIENT EMAIL",
              "displayName": "CLIENT EMAIL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CLIENT MESSAGE",
              "displayName": "CLIENT MESSAGE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AI RESPONSE ",
              "displayName": "AI RESPONSE ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -460,
        320
      ],
      "id": "230e4f25-2b8d-4921-9ea9-c7335319d505",
      "name": "Append row in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "K4T3pQbIwEAiZUmi",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -560,
        -120
      ],
      "id": "fda2ad6e-af9d-4936-a678-f5e3d0bab3e5",
      "name": "Recursive Character Text Splitter"
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4bbd1580-89c8-4d52-81d5-a69f713240ed",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "44ab86ced0d239c1654b0cb0f02eeb607ed4a6a9ae622a2a69658ee4d471167b"
  },
  "id": "YCUgfS0Pswc7lNUD",
  "tags": []
}