{
  "name": "Crypto Analysis",
  "nodes": [
    {
      "parameters": {
        "name": "getChart",
        "description": "Call this tool to get an analysis of a requested stock. The URL that is output from this tool must be returned in markdown format. For example, ![](url)",
        "workflowId": {
          "__rl": true,
          "value": "iilUj8RftOUqxCHD",
          "mode": "list",
          "cachedResultName": "chart_maker_crypto"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1344,
        688
      ],
      "id": "2a6fc636-992c-4f89-becd-a53be6ed035e",
      "name": "Get Chart"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1024,
        688
      ],
      "id": "49230a3d-edd0-4e76-8f90-27c3e73a41e3",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        480,
        368
      ],
      "id": "ba9c40aa-bc47-44fb-aae1-91c74decf1f8",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "06427b94-ca00-4392-a168-1504705c3282",
              "name": "user",
              "value": "=anylyse {{ $json.query }}",
              "type": "string"
            },
            {
              "id": "b0bf65e7-3338-4b43-88c1-3cb8e94ef0b6",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        768,
        368
      ],
      "id": "3c43829e-124f-4d8b-8fe8-e4dc9c54f476",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "**When Executed by Another Workflow**\nEntry point for this workflow when triggered by another workflow. Accepts data such as the crypto ticker symbol.",
        "height": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        224
      ],
      "typeVersion": 1,
      "id": "19cbb66a-faea-425e-ab2f-23730e66f52c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "**When Executed by Another Workflow**\nEntry point for this workflow when triggered by another workflow. Accepts data such as the crypto ticker symbol.",
        "height": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        704,
        224
      ],
      "typeVersion": 1,
      "id": "9ee1c29f-cf8f-461a-82bc-0097e690690c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "**Get Chart**\nCalls Workflow 3 to generate a chart image and analysis based on the given crypto ticker.",
        "height": 200,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1264,
        608
      ],
      "typeVersion": 1,
      "id": "7792861b-174a-4b0d-ad25-1d3a97bc9050",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "**Binance analysis agent**\nMain LangChain agent that handles the conversation. It decides when to use tools and generates user-facing replies.\n\n",
        "height": 300,
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1024,
        224
      ],
      "typeVersion": 1,
      "id": "4e372332-6b7d-43b1-8580-2d729d71fc08",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "**OpenAI Chat Model**\nConnects to the GPT-4o-mini model and is used by the agent to generate responses.",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        592
      ],
      "typeVersion": 1,
      "id": "b8509cdd-eb8c-4240-85e8-7f112041d073",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user }}",
        "options": {
          "systemMessage": "=# Overview  \nYou are an AI agent specializing in discussing cryptocurrency topics and analyzing digital assets. Your primary objective is to assist users with professional yet friendly conversations about crypto markets, coins, and blockchain investments. You can also perform technical analysis using the **GetChart** tool to generate crypto charts.  \n\n## Context  \n- The agent is designed to analyze and discuss crypto markets, providing insights on coins and related topics.  \n- Use the **GetChart** tool for technical analysis when a crypto ticker is provided.  \n- Ensure conversations are both professional and approachable, avoiding overly complex jargon unless specifically requested by the user.  \n- The agent should never give explicit financial advice (e.g., \"buy\" or \"sell\" recommendations).  \n\n## Instructions  \n1. Greet the user in a friendly and professional manner.  \n2. Engage in a conversational tone while discussing crypto or blockchain-related topics.  \n3. If the user provides a crypto symbol and requests technical analysis:  \n   - Pass only the symbol to the **GetChart** tool.  \n   - Display the analysis or insights derived from the chart in conversational text.  \n4. When discussing crypto topics, provide detailed yet accessible explanations tailored to the user's level of understanding.  \n5. Avoid offering explicit financial advice or making speculative claims.  \n\n## Tools  \n- **GetChart**: Used for generating crypto charts based on provided tickers.  \n\n## Examples  \n\n### Example 1: General Crypto Discussion  \n**User Input:** \"What do you think about Ethereum's performance this year?\"  \n**Agent Output:**  \n\"Ethereum has had a dynamic year with strong momentum in the DeFi and L2 space. Its price has reflected broader market sentiment along with on-chain activity. Would you like a technical analysis of ETH's performance?\"  \n\n### Example 2: Technical Analysis Request  \n**User Input:** \"Can you analyze BTC for me?\"  \n**Agent Output:**  \n\"Sure! I’ve analyzed BTC for you. The chart shows a steady uptrend with support around $60,000 and resistance forming near $65,000. Let me know if you'd like more detailed breakdowns or additional indicators reviewed!\"  \n\n### Example 3: Crypto Concepts Explanation  \n**User Input:** \"Can you explain what market cap means in crypto?\"  \n**Agent Output:**  \n\"Of course! In crypto, market capitalization is the total value of a coin’s circulating supply. It’s calculated by multiplying the current price by the number of coins in circulation. It's a way to compare the relative size of different crypto assets. Want to go deeper into this topic?\"  \n\n## SOP (Standard Operating Procedure)  \n1. **Engage with the user:** Respond professionally and in a friendly tone.  \n2. **Analyze crypto assets:**  \n   - If a technical analysis is requested, pass the ticker to **GetChart**.  \n   - Summarize insights from the chart in accessible, conversational language.  \n3. **Explain crypto concepts:** Break down technical or blockchain-related terms into digestible explanations tailored to the user.  \n4. **Avoid financial advice:** Share analysis and information without suggesting investment decisions.  \n5. **Confirm user needs:** Ask clarifying questions if needed to better support the user.  \n\n## Final Notes  \n- Maintain a clear, friendly tone with a professional foundation.  \n- Use the **GetChart** tool effectively to provide value from chart-based insights.  \n- Focus on education and clarity, not speculation or recommendations.  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1040,
        368
      ],
      "id": "5aca86cd-e360-462a-904c-4e6464b51601",
      "name": "crypto analysis agent"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "websiteportfolio-chatbot",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        224,
        -304
      ],
      "id": "c1470900-5cda-49b4-837b-decd464f208e",
      "name": "Webhook",
      "webhookId": "419e3a04-3416-4223-a4da-1a665c37a349"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        864,
        32
      ],
      "id": "44d25324-df88-4cf6-a2a4-060f277aaac5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1424,
        -304
      ],
      "id": "e765f10f-289e-4f96-b8d4-9e2ae52b7e01",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{\nJSON.stringify({\n  chatbotReply: $item(\"0\").$node[\"main web hook agent\"].json[\"output\"],\n  sessionId: $item(\"0\").$node[\"Edit Fields2\"].json[\"sessionId\"]\n})\n\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1200,
        -304
      ],
      "id": "eae3c886-adbf-4e3b-a0e7-10196c41cf3c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=**Current date/time**: {{ $now }}\n**Current Day of Week**: {{ $now.weekdayLong }}\n## Crypto/Stock Financial Analyst Assistant\nYou are capable of acting as a Financial Analyst AI Agent, supporting visitors in analyzing **crypto** in a professional yet friendly tone.\n\nWhen the user asks about a specific coin (e.g., BTC, ETH), your task is to:\n- Extract the coin symbol.\n- Trigger the Binance Chart Analysis workflow with this symbol.\n- Return the analysis and chart back to the user.\n\nOnly trigger the analysis if the user clearly requests technical analysis or chart insights.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        800,
        -304
      ],
      "id": "b334db06-4b0f-4af0-9acb-80be21bc1046",
      "name": "main web hook agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "t6KREXRTEGno9n26",
          "mode": "list",
          "cachedResultName": "Crypto Analysis"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1280,
        32
      ],
      "id": "898c9439-0220-47d7-8768-9469483ce236",
      "name": "Binance Chart Analysis"
    },
    {
      "parameters": {
        "content": "**Edit Fields**\nExtracts chatInput and sessionId from the webhook payload and assigns them as variables for the next steps.",
        "height": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        448,
        -448
      ],
      "typeVersion": 1,
      "id": "087d2d35-e01f-4a45-ab70-9fd98c60a793",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "**Simple Memory**\nMaintains short-term memory across chat turns so the AI can remember what was said earlier in the conversation (limited to 10 exchanges).",
        "height": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        832,
        -112
      ],
      "typeVersion": 1,
      "id": "30652e04-87d0-499a-8ac4-f58f361912ad",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "**Respond to Webhook1**\nSends the formatted chatbot response back to your website as the HTTP response to the original webhook request.",
        "height": 280,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1344,
        -448
      ],
      "typeVersion": 1,
      "id": "61e84e05-8667-465b-b43b-43145fe647a9",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c3566d62-a9f9-4d4b-a140-d0d5cacc2810",
              "name": "chatInput",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "bcfbcd95-8d5b-4c55-9807-7f8ebf029261",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        528,
        -304
      ],
      "id": "636259df-1257-41c6-baa0-d6d266d2b3a2",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        640,
        -32
      ],
      "id": "dca74b5d-34b3-4e17-a309-89b2d8759d5d",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "content": "**Webhook**\nHandles incoming POST requests from your website chatbot. Accepts JSON data (e.g. chatInput and sessionId) from the frontend.",
        "height": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        160,
        -448
      ],
      "typeVersion": 1,
      "id": "50816591-fd20-4fea-975a-c9a2de63cc3e",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "**OpenAI Chat Model**\nConnects the agent to the GPT-4o-mini model for language generation. Handles all the response logic.",
        "height": 280,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        -112
      ],
      "typeVersion": 1,
      "id": "c14d79a9-63dc-4aa3-8bbe-afbf13b102e1",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "**Binance Chart Analysis**\nTriggers Workflow 2 (the Binance technical analysis agent) with the required crypto ticker if the user input contains a valid symbol.",
        "height": 280,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1104,
        -112
      ],
      "typeVersion": 1,
      "id": "ed7f72f2-92b9-4a1b-91d5-56180733b8b7",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "**Edit Fields1**\nFormats the final response and sessionId into a raw JSON string to send back to the frontend.",
        "height": 280,
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        -448
      ],
      "typeVersion": 1,
      "id": "5d133467-d36f-4fd4-876c-f2120dc23f80",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "**main web hook agent**\nThis is the core AI agent. It uses LangChain to analyze the input, extract intents (e.g. automation questions or crypto tickers), and decide whether to respond directly or call a tool like chart analysis.",
        "height": 280,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        -448
      ],
      "typeVersion": 1,
      "id": "d19cbfa4-ccc8-413b-a5e8-b652ec7bfe46",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fdf7e016-7082-4146-9038-454139023990",
              "name": "response",
              "value": "={{ $('Technical Analysis').item.json.choices[0].message.content }}",
              "type": "string"
            },
            {
              "id": "f0d357e5-95b9-4a50-8f38-bb9c1c91afec",
              "name": "image url",
              "value": "={{ $('Download Chart').item.json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        1088
      ],
      "id": "da8f1dbb-241d-404e-a145-5bbcbef0aca1",
      "name": "response"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "=# Role\n\nYou are an expert crypto analyst specializing in technical analysis of cryptocurrency charts. Your role is to analyze crypto charts provided to you and offer comprehensive insights into the technical aspects, including candlestick patterns, MACD indicators, volume trends, and overall market sentiment. You must provide a detailed breakdown of the chart, highlighting key areas of interest and actionable insights.\n\nWhen analyzing a crypto chart, always include the following:\n\n1. **Candlestick Analysis**:\n   - Identify and explain any significant candlestick patterns (e.g., bullish engulfing, doji, hammer).\n   - Comment on the overall trend (bullish, bearish, or sideways).\n   - Highlight any breakout or pullback zones.\n\n2. **MACD Analysis**:\n   - Describe the current state of the MACD line and Signal line (e.g., bullish crossover, bearish crossover).\n   - Discuss the MACD histogram and its implications for momentum.\n   - Identify any divergences between the MACD and price action.\n\n3. **Volume Analysis**:\n   - Highlight any significant changes in trading volume.\n   - Explain how volume supports or contradicts recent price movements.\n   - Indicate any unusual spikes in volume that may suggest whale or institutional activity.\n\n4. **Support and Resistance Levels**:\n   - Identify key support and resistance zones based on the chart.\n   - Discuss the relevance of these levels for potential reversals or breakouts.\n\n5. **Actionable Insights**:\n   - Provide clear guidance on possible buy, sell, or hold strategies.\n   - Suggest what to watch for in the short term, including confirmation signals or potential risks.\n\n6. **Other Observations**:\n   - Note any chart patterns or indicators that are relevant to the analysis.\n   - Offer insights into market sentiment or broader crypto trends based on the chart.\n\nBe clear, concise, and data-driven in your analysis. Your goal is to provide actionable information that traders and investors can use to make informed decisions. Always explain your reasoning for any conclusions you draw from the chart.\n",
        "inputType": "base64",
        "simplify": false,
        "options": {
          "detail": "auto"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1152,
        1088
      ],
      "id": "f8f06d67-68b5-46e3-9a90-1dfc9b484e67",
      "name": "Technical Analysis",
      "credentials": {
        "openAiApi": {
          "id": "IWZ5WKMJiV5068kS",
          "name": "ali's open ai"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        848,
        1088
      ],
      "id": "d4451a7a-beb0-4c96-bc97-d14553e35410",
      "name": "Download Chart"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.chart-img.com/v2/tradingview/advanced-chart/storage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "jo00ZcUCX84q0XWyJ4duw6T2DELvGADa44G0NLtX"
            },
            {
              "name": "Content-Type",
              "value": "application/Json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        608,
        1088
      ],
      "id": "782f7470-5f2e-4ec5-aa1b-78c569bf0d02",
      "name": "Get Chart URL"
    },
    {
      "parameters": {
        "jsCode": "const tickerRaw = $json.ticker || 'BTC';\nconst ticker = tickerRaw.toUpperCase();\n\nconst chartBody = {\n  theme: \"dark\",\n  interval: \"1W\",\n  symbol: `COINBASE:${ticker}USDT`,\n  override: {\n    showStudyLastValue: false\n  },\n  studies: [\n    {\n      name: \"Volume\"\n    },\n    {\n      name: \"MACD\",\n      override: {\n        \"Signal.linewidth\": 2,\n        \"Signal.color\": \"rgb(255,65,129)\"\n      }\n    }\n  ]\n};\n\nreturn [\n  {\n    json: {\n      body: chartBody\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        336,
        1088
      ],
      "id": "8b941bd1-2832-47bc-a445-202a027f2c8b",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a71fb890-5bc8-4300-95ae-7de574f805a8",
              "name": "ticker",
              "value": "={{ $json.query }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        48,
        1088
      ],
      "id": "43b1f6fb-8c2e-4639-9263-bcbbffd51f8c",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "content": "**When Executed by Another Workflow**\nEntry point for this workflow when triggered by another workflow. Accepts data such as the crypto ticker symbol.",
        "height": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -304,
        960
      ],
      "typeVersion": 1,
      "id": "ab6214ee-0256-47f1-aa98-9a7c337ba43e",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "Edit Fields\nExtracts the query parameter and assigns it to a variable named ticker.",
        "height": 260,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -32,
        960
      ],
      "typeVersion": 1,
      "id": "e703bf06-bb1d-4d6d-9a38-2ab7ab57ec7c",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "**code**\nCreates a TradingView chart configuration using the ticker and includes indicators like Volume and MACD.",
        "height": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        256,
        960
      ],
      "typeVersion": 1,
      "id": "13f7955e-e358-4816-abc9-c6496bc2900d",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "**Get Chart URL**\nSends the chart config to QuickChart (or TradingView proxy) and receives a direct URL to the generated chart image.\n",
        "height": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        528,
        944
      ],
      "typeVersion": 1,
      "id": "f6ef9a61-dbbb-4f11-b377-88212c5c3ddf",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "**Download Chart**\nFetches the chart image from the URL and prepares it for vision analysis.",
        "height": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        816,
        944
      ],
      "typeVersion": 1,
      "id": "5b005d87-6180-430d-a0f1-293f3e8c49c2",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "**Response**\nresponse back with analysis and chart",
        "height": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1376,
        944
      ],
      "typeVersion": 1,
      "id": "a395ca20-92d4-4869-a14e-65ee284f2bf1",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "**Technical Analysis**\nUses GPT-4o Vision to interpret the chart image and provide a textual analysis of the crypto asset.",
        "height": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1104,
        944
      ],
      "typeVersion": 1,
      "id": "8830158b-6f5f-4b00-80fe-05e13299924a",
      "name": "Sticky Note19"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "btc"
        }
      }
    ]
  },
  "connections": {
    "Get Chart": {
      "ai_tool": [
        [
          {
            "node": "crypto analysis agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "crypto analysis agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "crypto analysis agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "crypto analysis agent": {
      "main": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "main web hook agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "main web hook agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Binance Chart Analysis": {
      "ai_tool": [
        [
          {
            "node": "main web hook agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "main web hook agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "main web hook agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Technical Analysis": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Chart": {
      "main": [
        [
          {
            "node": "Technical Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chart URL": {
      "main": [
        [
          {
            "node": "Download Chart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get Chart URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "42fb1b10-53fd-4085-b5b8-635774b388d4",
  "meta": {
    "instanceId": "44ab86ced0d239c1654b0cb0f02eeb607ed4a6a9ae622a2a69658ee4d471167b"
  },
  "id": "t6KREXRTEGno9n26",
  "tags": []
}